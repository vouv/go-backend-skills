网络层
IPv4、IPv6、ICMP、BGP路由选择协议

Vouv
https://github.com/vouv

# IPv4

网络层的主要功能：把 ip 数据报从源机一路送到目的机。

IP地址：由32位二进制位表示，可表示约43亿个地址。

*IP地址分类*

- A ：前1字节表示网络部分，剩下表示主机 128个地址 0 - 127 主机数（2²⁴ - 2）
- B ：前2字节为网络位，后2字节为主机位 128 - 191 主机数（2¹⁶ - 2）
- C ：前3字节表示网络位，后1字节为主机位 192 - 223 主机数 （256 - 2）
- D ：多播地址
- E ：保留地址

*保留的IP地址*

0.0.0.0：这个主机这个网络；路由表中默认路由的目的地址

255.255.255.255：泛洪广播地址，原则上指代互联网所有机器，路由器收到回拦截

127.0.0.0： 环回地址

127.0.0.1： 本机

169.254.0.0：非正常地址，不能正常通信

.play network/ipv4.go

# 子网规划

子网让两层 ip 地址结构变成三层：网络、子网、主机。

边界路由器：

- 负责和外部连续
- 了解内部网络结构的机制：子网掩码

*子网掩码*

将目的地址和子网掩码进行 `按位与` 操作，得到目的网络地址。

表示方式

	// 网络部分都是1，主机部分都是0
	|             网络            || 主机 |
	111111111111111111111111111111  00000

	点分十进制:  255.255.255.224
	/网络位数+子网位数: /27

	// 计算例子
	131.108.2.2     10000011  01101100  00000010  00000010
	255.255.255.0   11111111  11111111  11111111  00000000
	AND &
	131.108.2.0     10000011  01101100  00000010  00000000

*构建方法*

从 ip 地址的主机位借位完成，借位原则：

- 必须从主机位高位开始
- 主机位数至少保留2位
- 两个地址不能用：主机位全0（网络地址）、主机位全1（广播地址）

计算方法

	需要主机数 ≤ 2^n
	// 例 一个C累地址
	合法的ip总数：20
	所需地址总数：20 + 2
	22 < 2^5
	所以：主机位为5位，借位 8 - 5 = 3 位

.play network/icmp.go

# ip寻址

根据目的 ip 地址，找到目的网络的过程，主要设备：路由器。

每经过一个路由器称作一跳（Hop），到达最后一个路由器的时候，使用MAC寻址。

MAC寻址：根据目的MAC地址，找到目的机，主要设备：交换机。

*IP寻址和MAC寻址比较*

- 适用的网络范围不同：MAC适用小型网络、IP适用互联网
- 所依赖的地址结构不同：MAC为平面地址，全球唯一；IP为结构化地址
- 所处OSI模型层数不同
- 地址数目限制不同：MAC无耗尽风险、IP地址近乎枯竭
- 地址格式不一样：MAC为16进制、IP为点分十进制

*为什么有了MAC地址还要用IP地址？*

- IP是逻辑地址，分地域的概念、MAC是物理地址，用于标识每台机器
- MAC地址每经过一跳都会变化
- MAC可以比作身份证，IP可以比作邮政地址

*CIDR无分类编址*

CIDR（Class Inter Domain Routing）无类域间路由，缓解B类地址枯竭趋势，阻止路由表膨胀。

IP面临问题：

- A类地址：16M个主机（太大）
- C类地址：256个地址（太小）
- B类地址：65536个地址（够用，但是往往只用到几百个）
- 路由表膨胀，性能问题

*最长匹配前缀*

匹配路由表目的路径时，如果有多条路由匹配，选择匹配子网掩码最长的那一项。

*路由聚合*

聚合和子网规划是相反的行为，聚合结果：基地址/网络位，聚合后被称为超网

聚合条件：

- 子网构成的地址空间连续
- 下一跳相同

聚合好处

- 隔离路由翻动，子网路由的变化不需要上级路由处理
- 缩减路由表规模

.play network/cidr.go

# IPv6

冒分16进制表示，每16位转换为4位16进制表示，地址前缀用/xx表示。

IPv6地址分类

- 单播地址（Unicast Address）
- 组播地址（Multicast Address）
- 任播地址（cast Address）

*特殊地址*

- ::/128    未指定
- ::1/128   环回地址
- FF00::/8  组播
- FE80::/10 链路本地地址
- FEC0::/10 网点本地地址

*ipv4过渡ipv6*

过渡阶段

- 1. ipv4主流，ipv6孤岛
- 2. ipv6、ipv4 网络规模差不多
- 3. ipv6主流，ipv4逐渐退出

*过渡技术*

双协议栈、隧道、地址转换技术。

双协议栈：优先ipv6，否则ipv4

隧道技术

- ipv4分组搭载ipv6分组
- ipv6分组搭载ipv4分组

翻译转换技术

适用于纯ipv6和纯ipv4之间的节点通信，类似NAT。

*链接*

[[http://www.kame.net/][kame]]

[[http://test-ipv6.com/][test-ipv6]]

.play network/ipv6.go

# 路由

.image /content/img/network/router.jpg

直连路由：路由器启动后自动发信所处子网

静态路由：管理人员手功能配置的路由，如默认，缺省路由

动态路由：使用路由选择协议动态计算路径

路径优劣： 路由器跳数、带宽、延迟、可靠性、负载、通信代价（费用）

*距离矢量路由选择协议DV*

DV（Distance Vector），常见于小型网络，RIP就是典型DV算法。

- 每个路由器维护两个向量（Di：度量代价和Si：下一跳）
- 邻居路由器交换信息
- 路由器根据收到的信息更新路由表

# 路由信息协议RIP

RIP（Routing Information Protocol）位于UDP之上。典型 DV 协议，采用跳数作为度量，跳数限制15跳，默认每30秒交换一次向量信息。

RIP版本

- RIPv1 有类的路由选择协议
- RIPv2 无类（现代路由选择协议的基本特征）、支持CIDR、VLSM
- RIPng 支持ipv6

简单 DV 协议，实现简单，开销小，但是限制跳数为15，限制了网络规模.

缺点：度量不合理、计数到无穷、收敛慢、路由环，过时信息被传播。

*链路状态路由选择LS*

LS（Link State Routing）：

- 发现 它的邻居节点们，了解邻居的网络地址
- 设置 到它的每个邻居的成本度量
- 构造 一个分组LSP，包含它所了解到的上述所有信息
- 发送 LSP给其他路由器
- 计算 完整的网络图，到每个目标的最短路径

量度：链路带宽（反比），延迟（发送ECHO分组测量RTT）。

LSP（Link State Packet/ Advert）：链路状态分组：

- 每个分组包含递增序列号，路由器记录下序列号对
- 到达分组判断新旧，新的就会广播出去，旧的或重复的抛弃
- 所有的LSP/LSA分组都要求被确认

可能的问题

- 序列号回转问题：用32位表示序列号
- 路由器崩溃：age倒计时，到0就清除记录，新LSP重新记录
- 序列号损坏：坏的序列号age逐渐到0丢弃，正确序列号的被重新记录

.play network/ls.go

# 单区域 OSPF

OSPF(Open Shortest Path First)内部网关协议（IGP）中性能最优，应用最广的协议.

IP数据报中协议号为：89 ，通常 TTL=1 ，意味着只被传递一跳。

特点

- 可以在大型网络中使用
- 无路由自环
- 支持VLSM、CIDR
- 采用10^8/带宽作为度量
- 收敛快、可分区管理

OSPF分组

- Hello：与邻居建立毗邻关系
- DD（Database Description）：描述链路状况数据库信息（封装LSP头部报文，数据量相当于中数据量30%，以节省带宽）
- LSR：请求邻居路由发送链路状态数据库详情
- LSU：发送邻居路由器链路状态公告，作为LSR的应答或者广播网络中的事件
- LSack：确认收到LSU

原理

- 触发更新机制、DR选举机制（priority最大的，次选routerID最大的）
- 所有路由器都有全网的拓扑图，采用dijkstra算法计算最短路径，计算结果是一个树
- 区域之间通过建立骨干区域，避免区域之间的环

.play network/ospf.go

# 网络地址翻译NAT

# 互联网控制消息协议ICMP

# 地址解析协议ARP

